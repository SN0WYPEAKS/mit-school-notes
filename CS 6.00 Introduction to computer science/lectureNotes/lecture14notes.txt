notes on the board:
    decision tree:
        w[5, 3, 2]
        v[9, 7, 8]
    binary decision tree
    optimal substructure
    memoization:
        O(n         s)          O(ns)space
          items     size        30*40*1200
    size of solution
    big O:
        size of the coding of the input
    pseudo polynomial algorithm:(never worse than the brute force method, usually better)
        a polynomial algorithm that is polynomial in the size of the solution
        polynomial in the numerical value of input
    numeric value:
        exponential in the number of digits
    O(n**2)
    dynamic programming:
        trade time for space
        don't be intimidated by exponential problems
        broadly useful
        keep in mind the concept of problem reduction:
            reducing a problem to a previously solved problem
    module(modularity):
        collection of related functions:
            refer to the functions using dot notation:(is used to avoid conflicts with other functions that may use the same variable names)
                dot notation:
                    used to access an object's attributes and methods, making it easier to search complex data structures
                import math:
                    math.sqrt(11)
                import set
                import table
                table.member(e,t)
        classes:
            used in object-oriented programming
        data abstractions:
            abstract data types
        java,c++,python,...:
            object-oriented programming became popular because of these languages
        object = collection of data and functions
        user defined types
        encapsulation:(data, methods)
            a way to restrict the direct access to some components of an object,
            so users cannot access state values for all of the variables of a particular object
        message passing metaphor
        l.sort()
        c.area()
        class:
            collection of objects with characteristics in common

definitions of the title subjects:
    object-oriented programming:
        a computer programming model that organizes software design around data,
        or objects, rather than functions and logic
