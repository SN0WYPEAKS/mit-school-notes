notes on the board:
    int
    arbitrary precision integers(in Python, you can make numbers as big as you want to)
    L = long(less efficient than smaller numbers)
    once you get L, you stay L
    float - floating point - real numbers
    IEEE 754 floating point
    scientific notation
    mantissa(significand):
        the part of a logarithm that follows a decimal point
    exponent
        a quantity representing the power to which a given number or expression is to be raised
    mantissa and exponent:
        in decimal, very large numbers can be shown with a mantissa and an exponent
    1 <= mantissa <= 2 mantissa
    -1022 to 1023       exponent
    64 bits
    1 bit sign
    11 exponent
    52 mantissa
    17 decimal digits of precision
    1/8 = 0.125
    base 10: 1.25*10**-1
    base 2: 1.0*2**-3(0.001)
    1/10:
        1*10**-1
    base 2:
        ?
        .00011001100....
    repr() short for representation:
        rounds floats to 17 digits
    worry about == on floats
    abs(a*a - 2.0) < epsilon (abs stands for absolute value)
    epsilon:
        an arbitrary number(smallest possible numbers)
    absolute value:
        the magnitude of a real number without regard to its sign
    might not be an exact answer
    can't enumerate all guesses
    uncountable
    guess, check, and improve
    successive approximation:
        guess = initial guess
        for iter in range(100):
            if f(guess) close enough:
                return guess
            else:
                guess = better guess
        error
    bisection method:
        an approximation method to find the roots of the given equation by repeatedly dividing the interval

definition of the subjects in the lesson title:
    floating point numbers:
        decimal values or fractional numbers
    successive refinement:
        a technique for continuously improving the code while maintaining core functionality
    finding roots:
        figuring out what number multiplied by itself is equal to the number under the square root symbol
