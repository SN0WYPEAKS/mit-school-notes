notes on the board:
    first  part of the list     last part of the list
    start           mid         end
    O(log n)
    implement list:
        0th element     start
        1st element     start + 4
        2nd element     start + 2*4
        kth element     start + k*4
    linked list:
        a data structure that store data in the form of a chain
        linear access
    general binary search:
        1. pick the midpoint
        2. check to see if this is the answer
        3. if not, reduse to a smaller problem
        4. repeat
    should we sort before we search?
    can we sort a list in sub-linear time?(less than linear time) --no
    can we sort it in linear time? --probably not
    how fast can we sort it?(n log n time)
    linear case:        sort and search:
        n                   n log n + log n
    amortize the cost:(amortize means gradually write off the initial cost of an asset over a period)
        k searches of a list
        linear(better if searching once)              sort and search(better if the list will be used again)
        k*n                                             n log n + k log n
    selection sort:(quadratic)
        dividing the input list into two parts: the sorted part at the left end and the unsorted part at the right end
        1,8,3,6,4
        minIndx
        minVal
    loop invariant:(quadratic)
    (a statement about an algorithm's loop that: is true before the first iteration of the loop and,
    if it's true before an iteration, then it remains true before the next iteration)
        list is split into a prefix and suffix
            prefix is sorted and suffix is not
    bubble sort:(quadratic)
        a sorting algorithm that compares two adjacent elements and swaps them until they are in the intended order
    divide and conquer algorithm:
        a strategy of solving a large problem by breaking the problem into smaller sub-problems

definitions for lesson title subjects:
    binary search:
        a search algorithm that finds the position of a target value within a sorted array
    bubble sort:(one of the most inefficient sort methods)
        a basic algorithm for arranging a string of numbers or other elements in the correct order
    selection sort:(more efficient than bubble sort)
        an effective and efficient sort algorithm based on comparison operations
